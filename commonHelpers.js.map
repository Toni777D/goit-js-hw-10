{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\nflatpickr('#datetime-picker', options);\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\nlet userSelectedDate = new Date(options.onClose);\n\nconst startButton = document.querySelector('[data-start]');\nconst dateTimePicker = document.getElementById('datetime-picker');\n\ndateTimePicker.addEventListener('change', () => {\n  const selectedDate = new Date(dateTimePicker.value);\n  if (selectedDate <= new Date()) {\n    iziToast.show({\n      title: 'Hey',\n      message: 'Please choose a date in the future',\n    });\n  } else {\n    startButton.disabled = false;\n  }\n});\n\nlet countdown;\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n  clearInterval(countdown);\n\n  const selectedDate = new Date(dateTimePicker.value).getTime();\n\n  countdown = setInterval(() => {\n    const now = new Date().getTime();\n    const different = selectedDate - now;\n\n    if (different <= 0) {\n      clearInterval(countdown);\n      updateTime(0);\n      dateTimePicker.disabled = false;\n    } else {\n      updateTime(different);\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n\nfunction updateTime(ms) {\n  const { days, hours, minutes, seconds } = convertMs;\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n}\n"],"names":["flatpickr","options","selectedDates","startButton","dateTimePicker","countdown","selectedDate","now","updateTime","convertMs","ms","days","hours","minutes","seconds"],"mappings":"oGAKAA,EAAU,mBAAoBC,CAAO,EAErC,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACH,EACuB,IAAI,KAAKD,EAAQ,OAAO,EAE/C,MAAME,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,eAAe,iBAAiB,EAEhEA,EAAe,iBAAiB,SAAU,IAAM,CACzB,IAAI,KAAKA,EAAe,KAAK,GAC9B,IAAI,KACtB,SAAS,KAAK,CACZ,MAAO,MACP,QAAS,oCACf,CAAK,EAEDD,EAAY,SAAW,EAE3B,CAAC,EAED,IAAIE,EACJF,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAe,SAAW,GAC1B,cAAcC,CAAS,EAEvB,MAAMC,EAAe,IAAI,KAAKF,EAAe,KAAK,EAAE,UAEpDC,EAAY,YAAY,IAAM,CAC5B,MAAME,EAAM,IAAI,KAAM,EAAC,QAAO,EACZD,EAAeC,GAEhB,GACf,cAAcF,CAAS,EACvBG,EAAY,EACZJ,EAAe,SAAW,IAE1BI,EAAoB,CAEvB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC,EAE/B,SAASD,EAAWE,EAAI,CACtB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAC1C,SAAS,cAAc,aAAa,EAAE,YAAc,eAAeE,CAAI,CACzE"}