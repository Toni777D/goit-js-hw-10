{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst startButton = document.querySelector('[data-start]');\nconst dateTimePicker = document.getElementById('datetime-picker');\n\ndateTimePicker.addEventListener('change', () => {\n  const selectedDate = new Date(dateTimePicker.value);\n  if (selectedDate <= new Date()) {\n    startButton.disabled = true;\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n    });\n  } else {\n    startButton.disabled = false;\n  }\n});\n\nlet countdown;\n\nstartButton.addEventListener('click', () => {\n  startButton.disabled = true;\n  dateTimePicker.disabled = true;\n  clearInterval(countdown);\n\n  const selectedDate = new Date(dateTimePicker.value).getTime();\n\n  countdown = setInterval(() => {\n    const now = new Date().getTime();\n    const distance = selectedDate - now;\n\n    if (distance <= 0) {\n      clearInterval(countdown);\n      updateTime(0);\n      dateTimePicker.disabled = false;\n    } else {\n      updateTime(distance);\n    }\n  }, 1000);\n});\n\nfunction updateTime(ms) {\n  const { days, hours, minutes, seconds } = convertMs(ms);\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent =\n    addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent =\n    addLeadingZero(seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  value = '' + value;\n  return value.padStart(2, '0');\n}\n"],"names":["options","selectedDates","flatpickr","startButton","dateTimePicker","iziToast","countdown","selectedDate","now","distance","updateTime","ms","days","hours","minutes","seconds","convertMs","addLeadingZero","value"],"mappings":"2GAMA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACH,EAEAC,EAAU,mBAAoBF,CAAO,EAErC,MAAMG,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAiB,SAAS,eAAe,iBAAiB,EAEhEA,EAAe,iBAAiB,SAAU,IAAM,CACzB,IAAI,KAAKA,EAAe,KAAK,GAC9B,IAAI,MACtBD,EAAY,SAAW,GACvBE,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACf,CAAK,GAEDF,EAAY,SAAW,EAE3B,CAAC,EAED,IAAIG,EAEJH,EAAY,iBAAiB,QAAS,IAAM,CAC1CA,EAAY,SAAW,GACvBC,EAAe,SAAW,GAC1B,cAAcE,CAAS,EAEvB,MAAMC,EAAe,IAAI,KAAKH,EAAe,KAAK,EAAE,UAEpDE,EAAY,YAAY,IAAM,CAC5B,MAAME,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWF,EAAeC,EAE5BC,GAAY,GACd,cAAcH,CAAS,EACvBI,EAAW,CAAC,EACZN,EAAe,SAAW,IAE1BM,EAAWD,CAAQ,CAEtB,EAAE,GAAI,CACT,CAAC,EAED,SAASC,EAAWC,EAAI,CACtB,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAE,EACtD,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCI,EAAeH,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCG,EAAeF,CAAO,CAC1B,CAEA,SAASC,EAAUL,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeC,EAAO,CAC7B,OAAAA,EAAQ,GAAKA,EACNA,EAAM,SAAS,EAAG,GAAG,CAC9B"}